doctype html
html(lang='en')
  head
    meta(charset='UTF-8')
    title Documentation | Semantic-UI Generator 
    link(rel='stylesheet' type='text/css' href='../dist/semantic.color.css')
    link(rel='stylesheet' type='text/css' href='assets/libs/semantic.min.css')
    link(rel='stylesheet' type='text/css' href='assets/libs/prism.css')
    script(src='assets/libs/jquery.min.js')
    script(type='text/javascript' src='assets/libs/semantic.min.js')
    script(src='assets/libs/prism.js')
    script(src='assets/libs/script.js')
    :css
      body {
      padding: 1em;
      background-color: #e9ebe6 !important;
      }
      .ui.menu.sharing.button {
      background: transparent !important;
      box-shadow: none !important;
      border-radius: 0 !important;
      border: none !important;
      }
      .ui.animated.list.user .item{
      margin-bottom: 1em !important;
      }
      .ui.animated.list.user .item:last-child{
      margin-bottom: 0!important;
      }
      .ui.bottom.attached.tab.segment {
      min-height: 600px;
      }
      .ui.flatgold.header .sub.header {
      color: rgba(255,255,255, 0.7);
      }
      .ui.flatgold.header a {
      position: relative;
      color: rgba(255,255,255, 0.7);
      text-decoration: none;
      }
      .ui.flatgold.header a:hover {
      color: rgba(255,255,255, 1);
      }
      .ui.flatgold.header a::before {
      content: "";
      position: absolute;
      width: 100%;
      height: 2px;
      bottom: 0;
      left: 0;
      background-color: #A38528;
      visibility: hidden;
      -webkit-transform: scaleX(0);
      transform: scaleX(0);
      -webkit-transition: all 0.3s ease-in-out 0s;
      transition: all 0.3s ease-in-out 0s;
      }
      .ui.flatgold.header a:hover::before {
      visibility: visible;
      -webkit-transform: scaleX(1);
      transform: scaleX(1);
      }
      a {
      position: relative;
      color: #A38528;
      text-decoration: none;
      }
      a:hover {
      color: rgba(255,255,255, 0.4);
      }
      a::before {
      content: "";
      position: absolute;
      width: 100%;
      height: 1px;
      bottom: 0;
      left: 0;
      background-color: rgba(163,133,40, 0.8);
      visibility: hidden;
      -webkit-transform: scaleX(0);
      transform: scaleX(0);
      -webkit-transition: all 0.3s ease-in-out 0s;
      transition: all 0.3s ease-in-out 0s;
      }
      a:hover::before {
      visibility: visible;
      -webkit-transform: scaleX(1);
      transform: scaleX(1);
      }
      .text.flatgold, p.text.flatgold, span.text.flatgold {
      color: #A38528 !important;
      }
      .text.white, p.text.white, span.text.white {
      color: rgba(255,255,255,0.8) !important;
      }
  body.language-markup
    .ui.container
      .ui.top.attached.inverted.menu
        a.flatgold.item.active(data-tab='first') Intro
        a.flatgold.item(data-tab='second') How it Works
        a.flatgold.item(data-tab='third') How to Setup
        a.flatgold.item(data-tab='four') Docs
        a.flatgold.item(data-tab='five') Info
      .ui.bottom.attached.tab.inverted.stacked.segment.active(data-tab='first')
        .ui.padded.grid
          .column
            .ui.inverted.dividing.header
              | What is this?
            h2.ui.flatgold.header
              | You can call it a 
              a(href='http://lesscss.org/features/#mixins-parametric-feature') Less Parametric Mixin,
              |  but we prefer to call it a 
              a(href='') Generator!
              .sub.header
                | Because you only need to define single line of code, so that you can achieved hundreds and more lines of code to get semantic-ui components colored and autogenerated.
            .ui.icon.inverted.flatgold.message
              i.announcement.sign.icon
              .content
                .header Our guarantee this will save you more precious time!
            .ui.inverted.dividing.header
              | Why do I need this Generator?
            .ui.padded.basic.segment
              .ui.animated.list.user
                .item
                  h2.ui.flatgold.header
                    i.laptop.icon
                    .content
                      | Web Designer
                      .sub.header
                        | If you are web designer, try this! and look how colorful person you&apos;ll be come.
                .item
                  h2.ui.flatgold.header
                    i.object.group.icon
                    .content
                      | Frontend Engineer
                      .sub.header
                        | If you are a frontend engineer and believe that color play a crucial part of your visual artwork, this will fit on you!
                .item
                  h2.ui.flatgold.header
                    i.coffee.icon
                    .content
                      | Semantic-UI Addicts
                      .sub.header
                        | If you aware that semantic-ui is great but lack of colors that fits to your need, you knew how to customize it but you&apos;re to lazy to do it. or maybe you&apos;ve tried and finally back off confused with every chaining @variable been made, congrats! Yes, Obviously this meant for you!
      .ui.bottom.attached.tab.inverted.stacked.segment(data-tab='second')
        .ui.icon.inverted.flatgold.message
          i.warning.sign.icon
          .content
            .header
              | Since this is just an extension, and this generator only help to generate new color classes for the semantic-ui components, so every original method to call a component will work as it is!
            p
              | Please check Semantic-UI 
              a(href='http://semantic-ui.com/') Official Documentation,
              |  for detail example and further information how to use it
        .ui.padded.grid
          .two.column.row.stackable
            .seven.wide.column
              h4.ui.dividing.flatgold.header
                | In this 
                a(href='#') demo
                |  page there are 
                em
                  a(href='#') six new color
                |  newly created. 
                .sub.header
                  i.left.arrow.icon
                  | look custom color at 
                  em
                    strong left menu section
              h5.ui.flatgold.header
                | Those colors now 
                strong.text.white available
                |  as new color 
                strong.text.white class
                | , I call it:
              p
                code.language-css .flatgold
                code.language-css .concrete
                code.language-css .darkgreen
                code.language-css .autumnbrown
                code.language-css .darkblue
                | &amp;
                code.language-css .litecream
                | . 
                |             For now we only need to write code below in 
                a(href='https://github.com/sieteminerva/Semantic-UI-Color-Generator/master/src/generators/ui-colored-menu.generator.less') semantic.color.less
                | , and compile it. But
                |             in real world you can do whatever you want, depend on how you integrate it to your project structure.
              pre.language-less(data-src='showcase/generate-all.css').
                
            .nine.wide.column
              img.ui.right.floated.rounded.image(src='assets/images/generator_color.gif' alt='Preview')
          .row
            h5.ui.dividing.header
              span.text.white
                | Those custom colors now 
                strong.text.flatgold
                  em Automagically
                |  available for 
                strong.text.flatgold
                  em 12 components
                | .
                span
                  | Here is the generated 
                  a(href='') CSS code
                  | .
            |               List of Autogenerated Components:
            a(href='http://semantic-ui.com/collections/grid.html#colored') Grid
            |  |  
            a(href='http://semantic-ui.com/collections/table.html#colored') Table
            |  | 
            a(href='http://semantic-ui.com/elements/segment.html#colored') Segment
            |  |  
            a(href='http://semantic-ui.com/views/card.html#colored') Card
            |  |  
            a(href='http://semantic-ui.com/collections/message.html#colored') Message
            |  |  
            a(href='http://semantic-ui.com/modules/progress.html#color') Progress
            |  |  
            a(href='http://semantic-ui.com/collections/menu.html#colored') Menu
            |  | 
            a(href='http://semantic-ui.com/elements/icon.html#colored') Icon
            |  |  
            a(href='http://semantic-ui.com/elements/header.html#colored') Header
            |  |  
            a(href='http://semantic-ui.com/elements/label.html#colored') Label
            |  |  
            a(href='http://semantic-ui.com/elements/button.html#colored') Button
            |  |  
            a(href='http://semantic-ui.com/modules/dimmer.html') Dimmer
      .ui.bottom.attached.tab.inverted.stacked.segment(data-tab='third')
        .ui.icon.inverted.flatgold.message
          i.configure.icon
          .content
            .header
              | How to setup?
            p In this section we will learn how to use the generator
        .ui.padded.grid
          .column
            h3.ui.flatgold.header
              i.unlock.alternate.icon
              .content
                | Basic Requirement
                .sub.header
                  | Before we started you need to check yourself
            .ui.bulleted.list
              .item
                | Basic understanding of 
                a(target='_blank' href='http://lesscss.org/#') less
                |  css
              .item
                | Know how to compile less to css.
                ul.list
                  li.item
                    | You can use 
                    a(target='_blank' href='https://www.sublimetext.com/') SublimeText
                    |  extension, 
                    a(target='_blank' href='http://brackets.io/') Brackets
                    | , or any code editor that support less to compile it
                  li.item
                    | Using 
                    a(target='_blank' href='http://gruntjs.com/plugins') Grunt
                    |  or 
                    a(target='_blank' href='http://gulpjs.com/plugins/') Gulp
                    |  taks runner even better
                  li.item
                    | Using precompiler like 
                    a(target='_blank' href='https://prepros.io/') Prepros
                    | , 
                    a(target='_blank' href='http://koala-app.com/') Koala
                    | , etc. is Recommended *since it only an light task.
              .item
                | Basic knowledge of 
                a(target='_blank' href='http://semantic-ui.com') Semantic-UI
            h3.ui.flatgold.header
              i.settings.icon
              .content
                | Start a project
                .sub.header
                  | Now that you&apos;re ready lets get started!
            .ui.bulleted.list
              .item
                code.language-bash  $ git clone https://github.com/sieteminerva/Semantic-UI-Color-Generator.git
                |  or 
                a.ui.inverted.flatgold.mini.label(href='https://github.com/sieteminerva/Semantic-UI-Color-Generator/archive/master.zip')
                  i.download.icon
                  | download
                |  the source code
              .item
                | Define colors and components you want to generate in 
                a(href='https://github.com/sieteminerva/Semantic-UI-Color-Generator/master/src/semantic.color.less') semantic.color.less
              .item
                | Compile it to any place with any name you want. in this case you can look the 
                a(href='https://github.com/sieteminerva/Semantic-UI-Color-Generator/master/dist/') ./dist
                |  folder named 
                a(href='https://github.com/sieteminerva/Semantic-UI-Color-Generator/master/dist/semantic.color.css') semantic.color.css
                |  for compiled version
              .item
                | Include 
                a(href='https://github.com/sieteminerva/Semantic-UI-Color-Generator/master/dist/generators/ui-colored-menu.generator.css') semantic.color.css
                |  to your index.html. also don&apos;t forget to include the 
                a(href='https://semantic-ui.com/') semantic-ui
                |  library
      .ui.bottom.attached.tab.inverted.stacked.segment(data-tab='four')
        .ui.icon.inverted.flatgold.message
          i.lightning.sign.icon
          .content
            .header
              | This Section is still under development!
            p
              | At the end we wanted more, we want to extend as many as possible components from semantic-ui, and extracting functionalities like 
              strong.text.flatgold alignment, color for single text, border, etc.
              |  to be able for customization. so we can help to build and colorize your great next project. 
              strong.text.flatgold Please wait for it!
        .ui.padded.grid
          .column
            .ui.basic.segment
              .ui.dividing.flatgold.header
                | Exception for 
                span.text.white
                  em dimmer
              p.text.white
                | Because the 
                a(href='') dimmer.js
                |  code only manipulate the 
                code &lt;div class=&quot;ui dimmer&quot;&gt;&lt;/div&gt;
                | ,
                |             So it wont take any effect if you define it like this: 
                code &lt;div class=&quot;ui flatgold dimmer&quot;&gt;&lt;/div&gt;
                |  in the Markup, instead you also need defining which color of dimmer you want to use in 
                a(href='http://semantic-ui.com/modules/dimmer.html#/settings') Variation Settings
                |  of your javascript code,
              pre.
                \n                              
                                            
      .ui.bottom.attached.tab.inverted.stacked.segment(data-tab='five')
        .ui.padded.grid
          .column
            h3.ui.flatgold.header
              i.edit.icon
              .content
                .header
                  | How to Customize it
                  .sub.header
            .ui.bulleted.list
              .item
                | Go to 
                a(href='https://github.com/sieteminerva/Semantic-UI-Color-Generator/master/src/generators/') /generators
                |  folder
              .item
                | Open one of generator file available find 
                strong.text.flatgold *.less
                |  ( example: 
                a(href='https://github.com/sieteminerva/Semantic-UI-Color-Generator/master/src/generators/ui-colored-menu.generator.less') ui-colored-menu.generator.less
                |  file )
              .item
                | Modify the 
                strong.text.flatgold variable
                | . every variable will be start with 
                a(href='http://lesscss.org/features/#variables-feature') @
                |  customize it as you needed!
              .item
                | Repeat 
                a(href='#') Setup
                |  Steps before
            .ui.icon.inverted.flatgold.message
              i.idea.icon
              .content
                .header
                  | Advanced Feature
                  .sub.header
                p
                  | If you take a 
                  span.text.flatgold closer look
                  |  i also make a new 
                  strong.text.flatgold Variable for Classes
                  | , then i call it back using 
                  strong.text.flatgold Interpolation Syntax
                  | . not only for coloring,
                  |             i think with this recipe, 
                  strong.text.flatgold
                    | will open possibilities for 
                    em translating classes, theming or other tweaks.
            h5.ui.dividing.flatgold.header For example:
            .ui.bulleted.list
              .item
                p
                  | There is a variable called 
                  code.language-less  @prefix: .ui;
                  |  modify it to 
                  code.language-less  @prefix: .ui.yourThemeName;
              .item
                p
                  | Customize the CSS property of the selected component, dont forget to put 
                  code  !important;
                  |  mark for overriding.
              .item
                p
                  | Compile it. and now 
                  code.language-css  .yourThemeName
                  |  class automatically added into your generated component.
              .item
                p
                  | Then use it in your HTML markup 
                  code &lt;div class=&quot;ui yourThemeName red button&quot;&gt;
            p
              strong
                | In my case this approach more 
                em.text.flatgold Clean and Easy
                |  for 
                strong.text.flatgold theming
                | , without affecting the original version, and when semantic-ui got updated your site still up and running!
